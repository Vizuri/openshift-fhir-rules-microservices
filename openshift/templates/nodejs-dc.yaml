apiVersion: v1
kind: Template
metadata:
  name: nodejs-dc
parameters:
- name: APP_NAME
  description: The name assigned to all of the application objects defined in this template.
  displayName: Application Name
  required: true
- description: The exposed hostname that will route to the service, if left blank a value will be defaulted
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
objects:
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
      name: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    port:
      targetPort: web
    to:
      kind: Service
      name: ${APP_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${APP_NAME}
  spec:
    portalIP: ""
    ports:
    - name: web
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      name: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    name: "${APP_NAME}"
  spec:
    replicas: 1
    strategy:
      type: "Recreate"
      resources:
        limits:
          cpu: "500m"
          memory: "256Mi"
    template:
      metadata:
        labels:
          name: "${APP_NAME}"
          deploymentconfig: "${APP_NAME}"
      spec:
        containers:
        - args:
          env:
          image: ' '
          imagePullPolicy: "Always"
          name: "${APP_NAME}"
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 15
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 15
            timeoutSeconds: 2
          ports:
          - name: web
            containerPort: 3000
            protocol: TCP
          resources: {}
          securityContext:
          terminationMessagePath: "/dev/termination-log"
          volumeMounts:
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      type: ImageChange
