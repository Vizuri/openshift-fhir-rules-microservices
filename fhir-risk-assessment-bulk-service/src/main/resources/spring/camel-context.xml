<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <!-- Define a traditional camel context here -->
    <bean
        class="org.apache.camel.component.servlet.CamelHttpTransportServlet" id="camelHttpTransportServlet"/>
    <bean
        class="org.springframework.boot.web.servlet.ServletRegistrationBean" id="servlet">
        <property name="name" value="CamelServlet"/>
        <property name="servlet" ref="camelHttpTransportServlet"/>
        <property name="urlMappings" value="/*"/>
    </bean>
    <bean class="com.vizuri.fhir.service.FhirDataFormat" id="json-jackson"/>
    <bean class="com.vizuri.fhir.service.FhirTypeConverter" id="FhirTypeConverters"/>
    <bean
        class="org.apache.camel.processor.aggregate.UseLatestAggregationStrategy" id="aggregatorStrategy"/>
    <bean class="com.vizuri.fhir.service.RequestAggregator" id="aggregator"/>
    <bean class="com.vizuri.fhir.service.ResponseAggregator" id="responseAggregator"/>
    <!-- 
	<bean id="properties" class="org.apache.camel.component.properties.PropertiesComponent">
    		<property name="location" value="classpath:application.properties"/>
	</bean>
	-->
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <restConfiguration apiContextPath="api-docs" bindingMode="json"
            component="servlet" contextPath="/">
            <apiProperty key="cors" value="true"/>
            <apiProperty key="api.title" value="Healthcare demo clinical API"/>
            <apiProperty key="api.version" value="1.0.0"/>
            <corsHeaders key="Access-Control-Allow-Origin" value="*"/>
            <corsHeaders key="Access-Control-Allow-Methods" value="GET, HEAD, POST, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH"/>
            <corsHeaders key="Access-Control-Allow-Headers" value="Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"/>
        </restConfiguration>
        <rest id="rest-46904ba4-a56a-4952-8a7d-38883ff2d191" path="/riskassessment">
            <post id="post-5dd07bf9-0417-439d-9a8d-9ed2a26b56c5"
                outType="org.hl7.fhir.dstu3.model.Bundle" type="org.hl7.fhir.dstu3.model.Bundle">
                <to uri="direct:processBundle"/>
            </post>
        </rest>
        <route id="processBundle">
            <!-- Split on entry Content Based Router on Resource Type Save Resource 
				When all resources are saved, then Execute each Risk Assessment Build Response 
				== Bundle with each RiskAssessment <setBody id="_setBody1"> <constant>Response</constant> 
				</setBody> -->
            <from id="_fromProcessBundle" uri="direct:processBundle"/>
            <log id="_log1a1" message="CBR: Patient : ${body} "/>
            <split id="_split1" strategyRef="aggregator">
                <simple>${body.getEntry()}</simple>
                <choice id="_choice1">
                    <when id="_when1">
                        <simple>${body.getResource().getResourceType()}  == 'Patient'</simple>
                        <setBody id="_setBody1">
                            <simple>${body.getResource()}</simple>
                        </setBody>
                        <setProperty id="_setProperty1" propertyName="patient-id">
                            <simple>${body.getId.replaceAll("Patient/", "")}</simple>
                        </setProperty>
                        <convertBodyTo id="_convertBodyTo2" type="String"/>
                        <log id="_log1" message="CBR: Patient : ${body} "/>
                        <setHeader headerName="CamelHttpMethod" id="_setHeader1">
                            <constant>POST</constant>
                        </setHeader>
                        <setHeader headerName="Content-Type" id="_setHeader2">
                            <constant>application/json</constant>
                        </setHeader>
                        <to id="_to1" uri="{{service.patient.host}}?bridgeEndpoint=true"/>
                    </when>
                    <when id="_when2">
                        <simple>${body.getResource().getResourceType()} 
						== 'Observation'</simple>
                        <setBody id="_setBody1">
                            <simple>${body.getResource()}</simple>
                        </setBody>
                        <convertBodyTo id="_convertBodyTo2" type="String"/>
                        <log id="_log1" message="CBR: Observation : ${body} "/>
                        <setHeader headerName="CamelHttpMethod" id="_setHeader1">
                            <constant>POST</constant>
                        </setHeader>
                        <setHeader headerName="Content-Type" id="_setHeader2">
                            <constant>application/json</constant>
                        </setHeader>
                        <to id="_to1" uri="{{service.observation.host}}?bridgeEndpoint=true"/>
                    </when>
                    <when id="_when3">
                        <simple>${body.getResource().getResourceType()} 
						== 'QuestionnaireResponse'</simple>
                        <setBody id="_setBody1">
                            <simple>${body.getResource()}</simple>
                        </setBody>
                        <convertBodyTo id="_convertBodyTo3" type="String"/>
                        <log id="_log1" message="CBR: QuestionnaireResponse : ${body} "/>
                        <setHeader headerName="CamelHttpMethod" id="_setHeader1">
                            <constant>POST</constant>
                        </setHeader>
                        <setHeader headerName="Content-Type" id="_setHeader2">
                            <constant>application/json</constant>
                        </setHeader>
                        <to id="_to1" uri="{{service.questionnaire.host}}?bridgeEndpoint=true"/>
                    </when>
                    <otherwise id="_otherwise1">
                        <log id="_log113" message="*** CBR:        Other (Not Currently Configured) - ${body.getResource()}"/>
                    </otherwise>
                </choice>
            </split>
            <to id="_to2" uri="direct:returnRisk"/>
            <log id="_response" message="In ProcessBundle ${body}"/>
        </route>
        <route id="returnRisk">
            <from id="_fromreturnRisk" uri="direct:returnRisk"/>
            <log id="_log2" message="Patient Id: ${exchangeProperty[patient-id]}"/>
            <setBody id="_setBody2">
                <simple>null</simple>
            </setBody>
            <setHeader headerName="CamelHttpMethod" id="_setHeader4">
                <constant>POST</constant>
            </setHeader>
            <enrich id="_enrich1" strategyRef="responseAggregator">
                <simple>{{service.riskassessment.heart.host}}/${exchangeProperty[patient-id]}?bridgeEndpoint=true</simple>
            </enrich>
            <enrich id="_enrich2" strategyRef="responseAggregator">
                <simple>{{service.riskassessment.framingham.host}}/${exchangeProperty[patient-id]}?bridgeEndpoint=true</simple>
            </enrich>
            <enrich id="_enrich3" strategyRef="responseAggregator">
                <simple>{{service.riskassessment.diabetes.host}}/${exchangeProperty[patient-id]}?bridgeEndpoint=true</simple>
            </enrich>
            <setBody id="_setBody">
                <simple>${body}</simple>
            </setBody>
        </route>
    </camelContext>
</beans>
